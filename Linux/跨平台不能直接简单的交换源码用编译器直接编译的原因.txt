

是不是认为，只要有源码，直接丢给编译器编译一下，生成个目标文件就能在任何架构的CPU上运行代码了？
要真是这样，那世界上只需要一种操作系统就够了，编译一下，所有平台都能使用。实际情况根本不是这样的。
-----------------------------------------------------------
Windows 8是怎么支持ARM的，是重新设计了BSP和硬件驱动以后才能在ARM平台上跑的，ARM平台上的硬件操作跟x86完全不一样，ARM汇编指令和x86的指令的差别就像一个是中文另一个是英文一样，甚至有些指令在这个平台上有，在另一个平台上就没有，比如x86里的IN/OUT指令。
软件是要通过操作系统支持才能运行，但也不是说操作系统支持了，软件就一定能运行，软件本身还是要有大量的汇编指令了，从x86到ARM转换，就意味着软件也要整个重新设计，不仅仅是有兼容的API就够用的。
在x86平台上，调用API都的用CALL指令，在ARM平台上，调用API用的是BL指令，这俩指令都不一样，怎么搞兼容性？
即使游戏厂商愿意在ARM平台上编译，那是不是代码一定就能运行了呢？
肯定不是。要知道跨硬件平台做开发的成本是非常高的，正如我前面说的，不是拿源码直接编译一下就可以了。尤其是大型软件，涉及到各种硬件资源的操作（比如显卡，DirectX），不同平台上会很不一样。
不同硬件平台上的系统时钟、调度策略、内存映射方式、DMA、PCI操作都有很大的不同，有些对于游戏开发来说，都是致命的限制，而且有些限制就是因为Windows没有提供接口，总不能让做游戏的厂商自己设计一套对应的硬件驱动吧？
为什么手机游戏可以跨平台，因为手机游戏是Java写的，Java的程序天生就不是硬件指令，所以跨平台没有问题，只要Java虚拟机支持就够了。
但WAR3这些都不是Java写的，天生不具备跨平台属性。同样的道理，安卓的游戏你直接放到iOS系统里能运行不？肯定也不行。
世界上的硬件平台五花八门，除了ARM和x86，还有MIPS/PPC/SH/CF/SPARC....多数硬件平台都是不兼容的，甚至同一个架构的不同型号，也不是完全兼容甚至是完全不兼容的。
不要被x86和Windows平台的兼容性影响而产生硬件都是兼容的错觉。不兼容才是常态。